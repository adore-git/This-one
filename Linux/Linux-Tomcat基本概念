Tomcat 的基本概念

Tomcat 服务器由四大部分组成：

Coyote : 用来监听网络，接收请求，交给相应的 Catalina 处理，并将结果返回到客户端
Catalina : 实现了 J2EE 标准的 Servlet 容器，用来执行调用 Servlet。它是 tomcat 最核心的部分。
Jasper : 用来将 jsp 翻译成相应的 Servlet
Cluster : 当配置集群的时候才会有用。进行集群管理。
相应的，在 server.xml 中，分下面几个层次

Server
Service (一个服务是若干 Connector 和 Engine 的集合。 Connector 用来处理网络， Engine 用来执行功能)
Connector (用于监听网络，并将相应的请求发送给 Engine 相应 Host 的相应 Context)
Engine (一个引擎里里面包含若干 Host<本机可以多 IP，所以根据不同的 IP 地址访问不同项目>，每个 Host 包含部署的若干项目即 Context)
注意：

tomcat 是一个服务器，它包含基本的网络处理，还有通过内置的 Servlet 容器完成对 servlet 的处理
tomcat 在 4.* 版本后，对容器做了重新设定，新设定的容器名字命名为 catalina，一直沿用到现在。
在设置环境变量的时候，只有 CATALINA_HOME，并没有 TOMCAT_HOME。因为我们设定的是 Servlet 容器的目录。
一个项目的最基本单元是 Context，在最开始的时候，只能在 server.xml 的 Host 节点里配置。
但这不够科学，不够灵活。所以在后来的版本中，出现了 context.xml 配置文件，并且可以配置到多个位置，增加了配置的灵活性。
Tomcat 下的文件部署

在部署之前，先弄懂几个概念：

CATALINA
CATALINA_HOME 环境变量（什么意思，占位）
CATALINA_BASE 环境变量（什么意思，占位）
如果是手动安装的：

CATALINA_HOME=/opt/apache-tomcat-7
CATALINA_BASE=/opt/apache-tomcat-7
如果是 APT 安装的：

CATALINA_HOME=/usr/share/tomcat7
CATALINA_BASE=/var/lib/tomcat7
拿手动安装的示例，说明 CATALINA_BASE 下各文件夹的作用：

bin 文件夹，放置的是启动关闭等的可执行脚本文件
lib 文件夹，运行所需要的 jar 包
logs 日志文件夹，保存了运行中的各种日志。如果系统运行中出现问题，我们首先要想到来这个文件夹查看相应出错信息。
conf 文件夹，所有的配置文件
webapps 默认的项目存放文件夹。如果把 war 项目放到下面，会自动被服务器加载。
work 程序运行中编译的中间文件存放于此。比如，jsp 编译成的 servlet.
如果想部署项目，下面几种方法:

将符合 war 标准的文件夹或 .war 文件直接放置到 webapps 下面

修改配置文件，设置 Context

下面几种方法，分别对应不同的级别:

修改 conf/server.xml，增加或修改 Context 节点
修改 conf/context.xml，增加相应内容
修改或增加 conf/Catalina/主机名/context.xml，增加相应内容
修改或增加 conf/Catalina/主机名/名字.xml，增加相应内容
如果你们装了 tomcat7-examples 等，你们可以看一下 conf/Catalina/localhost 文件夹下面是不是已经存在了相应的 xml 文件？ 这就是为什么我们能在 tomcat 启动后访问到他们的原因。

比如，在 conf/Catalina/localhost/examples.xml 中，是这样的：

<Context path="/examples" docBase="/usr/share/tomcat7-examples/examples" />
使用 Tomcat 提供的 Admin 管理

首先，确保已经安装了 tomcat-admin。 tomcat-admin 也是一个标准的 web 工程，安装完后，它存在于 /usr/share/tomcat7-admin 文件夹。

apt install tomcat7-admin
其次，如果使用 admin 进行管理，需要登陆验证。所以我们需要添加一个用户。在 conf/tomcat-users.xml 中添加：

<role rolename="manager-gui"/>
<user username="用户名" password="密码" roles="manager-gui"/>
然后，访问 localhost:8080/manager/html 就可以进入控制台，在上面进行查看并部署了。
